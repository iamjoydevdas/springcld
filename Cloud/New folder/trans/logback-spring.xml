<?xml version="1.0" encoding="UTF-8" ?>

<configuration>
    <include resource="org/springframework/boot/logging/logback/base.xml"/>
    
    <springProperty name="service-name" source="logback.plcc.service-name"/>
    <springProperty name="node-name" source="logback.plcc.node-name"/>
    <springProperty name="destination" source="logback.plcc.path"/>
    <springProperty name="rolling-destination" source="logback.plcc.rolling-path"/>
    <springProperty name="max-file-size" source="logback.plcc.max-file-size"/>
    <springProperty name="max-history" source="logback.plcc.max-history"/>
    <springProperty name="kafka-topic" source="logback.kafka.topic"/>
    <springProperty name="bootstrap-servers" source="logback.kafka.bootstrap-servers"/>

	<appender name="PLCC_APPENDER" class="ch.qos.logback.core.rolling.RollingFileAppender">
		<File>${destination}</File>
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<fileNamePattern>${rolling-destination}</fileNamePattern>
			<timeBasedFileNamingAndTriggeringPolicy
				class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
				<maxFileSize>${max-file-size}</maxFileSize>
			</timeBasedFileNamingAndTriggeringPolicy>
			<maxHistory>${max-history}</maxHistory>
		</rollingPolicy>
		<encoder>
			<pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} %-5level [${service-name}] [${node-name}] [%thread] %logger{36} : %msg%n%ex</pattern>
		</encoder>
	</appender>
	<!-- <appender name="FAST_KAFKA_APPENDER" class="com.github.danielwegener.logback.kafka.KafkaAppender">
        <encoder class="com.github.danielwegener.logback.kafka.encoding.LayoutKafkaMessageEncoder">
            <layout class="ch.qos.logback.classic.PatternLayout">
                <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} %-5level [${service-name}] [${node-name}] [%thread] %logger{36} : %msg%n%ex</pattern>
            </layout>
        </encoder>
        <topic>${kafka-topic}</topic>
        <keyingStrategy class="com.github.danielwegener.logback.kafka.keying.RoundRobinKeyingStrategy" />
        <deliveryStrategy class="com.github.danielwegener.logback.kafka.delivery.AsynchronousDeliveryStrategy" />
        <producerConfig>bootstrap.servers=${bootstrap-servers}</producerConfig>
        <producerConfig>acks=0</producerConfig>
        <producerConfig>linger.ms=1000</producerConfig>
        <producerConfig>block.on.buffer.full=false</producerConfig>
        <producerConfig>client.id=KafkaLogAppender</producerConfig>
        <appender-ref ref="async_plcc_appender"/>
    </appender>	 -->

	<appender name="ASYNC_PLCC_APPENDER" class="ch.qos.logback.classic.AsyncAppender">
		<queueSize>2000</queueSize>
		<discardingThreshold>0</discardingThreshold>
		<appender-ref ref="PLCC_APPENDER" />
	</appender>
	<!-- <logger name="com.nts.plcc" level="DEBUG" additivity="false">
		<appender-ref ref="ASYNC_PLCC_APPENDER" />
	</logger> -->	
	<logger name="com.netflix" level="DEBUG" additivity="false">
		<appender-ref ref="ASYNC_PLCC_APPENDER" />
	</logger>
	<logger name="org.apache" level="DEBUG" additivity="false">
		<appender-ref ref="ASYNC_PLCC_APPENDER" />
	</logger>
	<logger name="org.jboss" level="DEBUG" additivity="false">
		<appender-ref ref="ASYNC_PLCC_APPENDER" />
	</logger>
	<logger name="org.hibernate" level="DEBUG" additivity="false">
		<appender-ref ref="ASYNC_PLCC_APPENDER" />
	</logger>
	<logger name="org.springframework" level="DEBUG" additivity="false">
		<appender-ref ref="ASYNC_PLCC_APPENDER" />
	</logger>
	<root level="DEBUG">
		<appender-ref ref="ASYNC_PLCC_APPENDER" />
	</root>
</configuration>